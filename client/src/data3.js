export const data =[
    {
        question: "The following postfix expression with single digit operands is evaluated using a stack:   (8 2 3 ^ / 2 3 * + 5 1 * -) .Note that ^ is the exponentiation operator. The top two elements of the stack after the first * is evaluated are:",
        option1: "6,1",
        option2: "5,7",
        option3: "3,2",
        option4: "1,5",
        ans: 1,
    },
    {
        question: "A function f defined on stacks of integers satisfies the following properties. f(∅) = 0 and f (push (S, i)) = max (f(S), 0) + i for all stacks S and integers i.If a stack S contains the integers 2, -3, 2, -1, 2 in order from bottom to top, what is f(S)?",
        option1: "6",
        option2: "4",
        option3: "3",
        option4: "2",
        ans: 3,
    },
    {
        question: "Consider n elements that are equally distributed in k stacks. In each stack, elements of it are arranged in ascending order (min is at the top in each of the stack and then increasing downwards). Given a queue of size n in which we have to put all n elements in increasing order. What will be the time complexity of the best known algorithm?",
        option1: "O(nlogk)",
        option2: "O(nk)",
        option3: "O(n^2)",
        option4: "O(k^2)",
        ans: 1,
    },
    {
        question: "The seven elements A, B, C, D, E, F and G are pushed onto a stack in reverse order, i.e., starting from G. The stack is popped five times and each element is inserted into a queue.Two elements are deleted from the queue and pushed back onto the stack. Now, one element is popped from the stack. The popped item is ________.",
        option1: "A",
        option2: "B",
        option3: "F",
        option4: "G",
        ans: 2,
    },
    {
        question: "Convert the following infix expression into its equivalent post fix expression (A + B^ D) / (E – F) + G",
        option1: "ABD^ + EF - / G+",
        option2: "ABD + ^EF - / G+",
        option3: "ABD + ^EF / - G+",
        option4: "ABD^ + EF / – G+",
        ans: 1,
    },
    {
        question: "Consider a standard Circular Queue \'q\' implementation (which has the same condition for Queue Full and Queue Empty) whose size is 11 and the elements of the queue are q[0], q[1], q[2].....,q[10]. The front and rear pointers are initialized to point at q[2] . In which position will the ninth element be added?",
        option1: "q[0]",
        option2: "q[1]",
        option3: "q[9]",
        option4: "q[10]",
        ans: 1,
    },
    {
        question: "Suppose a circular queue of capacity (n – 1) elements is implemented with an array of n elements. Assume that the insertion and deletion operation are carried out using REAR and FRONT as array index variables, respectively. Initially, REAR = FRONT = 0. The conditions to detect queue full and queue empty are",
        option1: "Full: (REAR+1) mod n == FRONT, empty: REAR == FRONT",
        option2: "Full: (REAR+1) mod n == FRONT, empty: (FRONT+1) mod n == REAR",
        option3: "Full: REAR == FRONT, empty: (REAR+1) mod n == FRONT",
        option4: "Full: (FRONT+1) mod n == REAR, empty: REAR == FRONT",
        ans: 1,
    },
    {
        question: "How many stacks are needed to implement a queue. Consider the situation where no other data structure like arrays, linked list is available to you.",
        option1: "1",
        option2: "2",
        option3: "3",
        option4: "4",
        ans: 2,
    },
    {
        question: "A Priority-Queue is implemented as a Max-Heap. Initially, it has 5 elements. The level-order traversal of the heap is given below: 10, 8, 5, 3, 2 Two new elements ”1‘ and ”7‘ are inserted in the heap in that order. The level-order traversal of the heap after the insertion of the elements is:",
        option1: "10, 8, 7, 5, 3, 2, 1",
        option2: "10, 8, 7, 2, 3, 1, 5",
        option3: "10, 8, 7, 1, 2, 3, 5",
        option4: "10, 8, 7, 3, 2, 1, 5",
        ans: 4,
    },
    {
        question: "Which one of the following is an application of Queue Data Structure?",
        option1: "When a resource is shared among multiple consumers.",
        option2: "When data is transferred asynchronously (data not necessarily received at same rate as sent) between two processes",
        option3: "Load Balancing",
        option4: "All of the above",
        ans: 4,
    },
];