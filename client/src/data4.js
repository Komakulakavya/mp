export const data=[
    {
        question: "A circularly linked list is used to represent a Queue. A single variable p is used to access the Queue. To which node should p point such that both the operations enQueue and deQueue can be performed in constant time? ",
        option1: "rear node",
        option2: "front node",
        option3: "not possible with a single pointer",
        option4: "node next to front",
        ans: 1,
    },
    {
        question: "Consider an implementation of unsorted single linked list. Suppose it has its representation with a head and a tail pointer (i.e. pointers to the first and last nodes of the linked list). Given the representation, which of the following operation can not be implemented in O(1) time ?",
        option1: "Insertion at the front of the linked list.",
        option2: "Insertion at the end of the linked list.",
        option3: "Deletion of the front node of the linked list.",
        option4: "Deletion of the last node of the linked list.",
        ans: 4,
    },
    {
        question: "Which of the following operations is performed more efficiently by doubly linked list than by linear linked list?",
        option1: "Deleting a node whose location is given",
        option2: "Searching an unsorted list for a given item",
        option3: "Inserting a node after the node with a given location",
        option4: "Traversing the list to process each node",
        ans: 1,
    },
    {
        question: "The minimum number of fields with each node of doubly linked list is",
        option1: "1",
        option2: "2",
        option3: "3",
        option4: "4",
        ans: 3,
    },
    {
        question: "In the worst case, the number of comparisons needed to search a singly linked list of length n for a given element is ",
        option1: "log(2n)",
        option2: "n/2",
        option3: "log(2n)-1",
        option4: "n",
        ans: 4,
    },
    {
        question: "What are the time complexities of finding 8th element from beginning and 8th element from end in a singly linked list? Let n be the number of nodes in linked list, you may assume that n > 8.",
        option1: "O(1) and O(n)",
        option2: "O(1) and O(1)",
        option3: "O(n) and O(1)",
        option4: "O(n) and O(n)",
        ans: 1,
    },
    {
        question: "Which of the following is an application of XOR-linked lists",
        option1: "Implementing stacks",
        option2: "Implementing queues",
        option3: "Memory-efficient linked list representation",
        option4: "Caching data structures",
        ans: 3,
    },
    {
        question: "N items are stored in a sorted doubly linked list. For a delete operation, a pointer is provided to the record to be deleted. For a decrease-key operation, a pointer is provided to the record on which the operation is to be performed. An algorithm performs the following operations on the list in this order: Θ(N) delete, O(log N) insert, O(log N) find, and Θ(N) decrease-key What is the time complexity of all these operations put together?",
        option1: "O(Log2N)",
        option2: "O(N)",
        option3: "O(N Log N)",
        option4: "Θ(N2 Log N)",
        ans: 3,
    },
    {
        question: "What are the application(s) of linked list?",
        option1: "Implementation of stacks and queues.",
        option2: "Maintaining a directory of names",
        option3: "None of the above",
        option4: "Both a and b",
        ans: 4,
    },
    {
        question: "The concatenation of two lists is to be performed in O(1) time. Which of the following implementations of a list should be used?",
        option1: "singly linked list",
        option2: "doubly linked list",
        option3: "circular doubly linked list",
        option4: "array implementation of lists",
        ans: 3,
    },
];